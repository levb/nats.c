name: CMake

on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3

    - name: Download protobuf
      # Download and extract the protobuf binaries
      # See
      # run: wget https://github.com/protocolbuffers/protobuf/releases/download/latest/protoc-23.1-win32.zip
      run: |
        $releaseName = "protoc-3.17.3-win32.zip" 
        $url = "https://github.com/protocolbuffers/protobuf/releases/download/v3.17.3/$releaseName"
        Invoke-WebRequest -Uri $url -OutFile "$PWD\$releaseName"
        $env:PROTOBUF_HOME = "$PWD\protobuf"
        Expand-Archive -Path "$PWD\$releaseName" -DestinationPath "$env:PROTOBUF_HOME"
        
        Set-Location -Path "$PWD\protobuf\build-cmake"
        cmake -G "NMake Makefiles"
        nmake
                
        $env:NATS_PROTOBUF_DIR = "$PWD\protobuf"
        Write-Output "==================== $env:PROTOBUF_HOME"
   
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
