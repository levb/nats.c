name: New Release

on:
  workflow_dispatch:
    inputs:
      kind:
        type: choice
        required: true
        description: 'Type of the release (major, minor, or patch)'
        options:
          - major
          - minor
          - patch

defaults:
  run:
    shell: bash --noprofile --norc -x -eo pipefail {0}

permissions:
  contents: write
  pull-requests: write

jobs:
  cut-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Gather version information
        id: version
        run: |
          echo "MAJOR=$(grep "set(NATS_VERSION_MAJOR" CMakeLists.txt | awk -F'[ )]' '{print $3}')" >> $GITHUB_OUTPUT
          echo "MINOR=$(grep "set(NATS_VERSION_MINOR" CMakeLists.txt | awk -F'[ )]' '{print $3}')" >> $GITHUB_OUTPUT
          echo "PATCH=$(grep "set(NATS_VERSION_PATCH" CMakeLists.txt | awk -F'[ )]' '{print $3}')" >> $GITHUB_OUTPUT
          echo "RELEASE_BRANCH=release/v${major}.${minor}" >> $GITHUB_OUTPUT
          echo "RELEASE_BRANCH=release/v${major}.${minor}" >> $GITHUB_ENV

      - name: Make release branch ${{steps.version.outputs.RELEASE_BRANCH}}
        if: inputs.kind != 'patch'
        run: |
            git checkout -b ${RELEASE_BRANCH}
            git push origin ${RELEASE_BRANCH}

      - name: Use existing branch ${{steps.version.outputs.RELEASE_BRANCH}}
        if: inputs.kind == 'patch'
        run: |
            if [[ "${{github.ref_name}}" != "${{steps.version.outputs.RELEASE_BRANCH}}" ]] then;
              echo "ERROR: You are trying to cut a patch release from a branch other than ${{steps.version.outputs.RELEASE_BRANCH}}"
              exit 1
            fi

      - name: Remove "beta" from version
        run: |
          sed -i .bak -E 's/^set\(NATS_VERSION_SUFFIX.*$/set(NATS_VERSION_SUFFIX "")/g' CMakeLists.txt
          grep "set(NATS_VERSION_" CMakeLists.txt
          git commit -am "(cut-release) Removed 'beta' from version"

      - name: build release
        uses: ./.github/workflows/build-release.yml
        # with:
        #   ref: release/v${major}.${minor}.0

      - name: FINAL
        run: echo "FINAL"