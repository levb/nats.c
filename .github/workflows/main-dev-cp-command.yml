name: main to test2 cherry-picker COMMENT

on:
  issue_comment:
    types: [created]

permissions:
  contents: write # so it can comment
  pull-requests: write # so it can create pull requests

jobs:
  cherry-pick:
    name: Cherry-pick COMMENT
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request && 
      github.event.issue.pull_request.merged_at && 
      startsWith(github.event.comment.body, '/cherry-pick')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: run hack cherry-pick
        run: | 
          set -x
          pwd
          # export
          echo "github.event.issue.number: ${{github.event.issue.number}}"
          # echo "github.event.comment.body: ${{github.event.comment.body}}"
          # echo "github.base_ref: ${{github.base_ref}}"
          # echo "github.base_ref_name: ${{github.base_ref_name}}"
          # echo "github.head_ref: ${{github.head_ref}}"
          # echo "github.ref: ${{github.ref}}"
          # echo "github.ref_name: ${{github.ref_name}}"
          # echo "github.ref_type: ${{github.ref_type}}"
          # echo "github.sha: ${{github.sha}}"
          # echo "GITHUB_SHA: ${GITHUB_SHA}"
          # echo "==> github.event.issue.pull_request: ${{github.event.issue.pull_request}}"
          # echo "==> github.event.issue.pull_request.merged: ${{github.event.issue.pull_request.merged_at}}"
          git remote -v
          ./.github/hack/cherry-pick.sh test2 ${{github.event.issue.number}} ${{github.sha}}